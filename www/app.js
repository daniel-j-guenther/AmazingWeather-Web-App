/* AW - Global Variables */ 
const baseURL = 'https://api.openweathermap.org/data/2.5/weather?zip=';
const apiKey = ',de&units=metric&appid=1ac55ebb6a761db6c941efa28deb6a3c';

// Udacity - Creates new date instance dynamically with JS (Central European Timezone)
let datum = new Date();
let newDate = datum.getDate()+'.'+datum.getMonth()+'.'+ datum.getFullYear();

/*  AW - When user clicks button Fetch OpenWeatherAPI Data, POST User+API data and update UI */
document.getElementById('generate').addEventListener('click', amazingWeather);  

/*  AW - The function that fetches API Data, updates endpoint and UI with chained Promises */
function amazingWeather(e) {
    
    let zipCode = document.getElementById('zip').value;             // Store users zip code.
    let newFeels = document.getElementById('feelings').value;       // Store users feelings.

    amazingData(baseURL, zipCode, apiKey)                           // Asynch Fetch local weather data L36...   
    .then((weatherData) => {                                        // Use returned weather data
        
        let newTemp = weatherData.main.temp;                        // Extrapolate Temparature,
        console.log("The date today is: " + newDate);               // (Prints current date to console)
        console.log("The temperature is: " + newTemp + "°C");       // (Prints current temp to console)
        console.log("The user is feeling: '" + newFeels + "'.");    // (Prints current entry to console)
        
        addToEndpoint('/new-entry', {                               // URL to make POST to, and object with new data.
            datum: newDate,                                         // - Async add date to app endpoint.
            tempum: newTemp,                                        // - Async add temp to app endpoint.
            feeling: newFeels                                       // - Async add entry to app endpoint.
        });          
    })
    .then(() => {
        updateUI();                                                 // Chained Promise to dynamically update our UI.
    });
}

/* AW - Async Fetch weather data see https://openweathermap.org/api */
const amazingData = async (baseURL, zipCode, apiKey) => {                       
    const res = await fetch(baseURL + zipCode + apiKey)             // Asynchronously Fetch via OpenWeatherAPI.
    try {                                                           // Once API responds do the following:
        let weatherData = await res.json();                         // Wait for OpenWeather JSON & store in variable.
        return weatherData;                                         // Return weather data to chain on L19...
    } catch (error) {                                               // Or, handle any errors.
        console.log("error: ", error);                              // (Elegant error handling)
    }
};   

/* AW - Async POST route adds entry to our app endpoint */
const addToEndpoint = async (url='', data = {}) => {    
    const response = await fetch(url, {
      method: 'POST',
      credentials: 'same-origin',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });
    try {
        const newData = await response.json();
        return newData;
    } catch (error) {
        console.log("error", error);
    }
};

/*  AW - GET Route II: Async fetch data from our app endpoint */
const updateUI = async () => {
    const req = await fetch('/add-entry');
    try {
        const appData = await req.json();
        // dynamically fetches data generated by users and weather api from endpoint and dynamcially updates UI.
        document.getElementById('date').innerHTML = "The date today is: " + appData.datum;
        document.getElementById('temp').innerHTML = "The temperature is: " + appData.tempum + "°C";
        document.getElementById('content').innerHTML = "You're feeling: '" + appData.feeling + "' today!";
    } catch (error) {
        console.log("error", error);
    }
};